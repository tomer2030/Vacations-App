# Alpine OS specific version + Node.js specific version:
FROM node:18-alpine3.16 AS build-stage

# Global installations needed for this stage:
RUN npm i -g typescript

# Create the stage folder - containing our TypeScript project files:
WORKDIR /tmp

# Copy only package.json and package-lock.json into /tmp:
COPY package*.json /tmp

# Run npm i before copying the entire code to restore node_modules:
RUN npm i

# Copy our application from current folder (.) to image working dir (/tmp)
COPY . /tmp

# Compile TypeScript into JavaScript - into /tmp/build (as stated in tsconfig.json):
RUN tsc

# -----------------PRODUCTION STAGE--------------------------------------

# Alpine OS specific version + Node.js specific version:
FROM node:18-alpine3.16 AS production-stage

# Create the stage folder - containing JavaScript files:
WORKDIR /app

# Copy package.json + package-lock.json from prev stage:
COPY --from=build-stage /tmp/package*.json /app

# Copy JavaScript files from prev stage:
COPY --from=build-stage /tmp/build /app

# Install only dependencies (without devDependencies)
RUN npm i --only=prod

# Execute command:
ENTRYPOINT node /app/app.js
